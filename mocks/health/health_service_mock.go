// Code generated by MockGen. DO NOT EDIT.
// Source: services/health/s_health.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHealthRepoInterface is a mock of HealthRepoInterface interface.
type MockHealthRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockHealthRepoInterfaceMockRecorder
}

// MockHealthRepoInterfaceMockRecorder is the mock recorder for MockHealthRepoInterface.
type MockHealthRepoInterfaceMockRecorder struct {
	mock *MockHealthRepoInterface
}

// NewMockHealthRepoInterface creates a new mock instance.
func NewMockHealthRepoInterface(ctrl *gomock.Controller) *MockHealthRepoInterface {
	mock := &MockHealthRepoInterface{ctrl: ctrl}
	mock.recorder = &MockHealthRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHealthRepoInterface) EXPECT() *MockHealthRepoInterfaceMockRecorder {
	return m.recorder
}

// CheckDB mocks base method.
func (m *MockHealthRepoInterface) CheckDB(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckDB", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckDB indicates an expected call of CheckDB.
func (mr *MockHealthRepoInterfaceMockRecorder) CheckDB(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckDB", reflect.TypeOf((*MockHealthRepoInterface)(nil).CheckDB), arg0)
}
