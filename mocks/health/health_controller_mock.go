// Code generated by MockGen. DO NOT EDIT.
// Source: controllers/health/c_health.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHealthServiceInterface is a mock of HealthServiceInterface interface.
type MockHealthServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockHealthServiceInterfaceMockRecorder
}

// MockHealthServiceInterfaceMockRecorder is the mock recorder for MockHealthServiceInterface.
type MockHealthServiceInterfaceMockRecorder struct {
	mock *MockHealthServiceInterface
}

// NewMockHealthServiceInterface creates a new mock instance.
func NewMockHealthServiceInterface(ctrl *gomock.Controller) *MockHealthServiceInterface {
	mock := &MockHealthServiceInterface{ctrl: ctrl}
	mock.recorder = &MockHealthServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHealthServiceInterface) EXPECT() *MockHealthServiceInterfaceMockRecorder {
	return m.recorder
}

// CheckHealthDB mocks base method.
func (m *MockHealthServiceInterface) CheckHealthDB(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckHealthDB", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckHealthDB indicates an expected call of CheckHealthDB.
func (mr *MockHealthServiceInterfaceMockRecorder) CheckHealthDB(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckHealthDB", reflect.TypeOf((*MockHealthServiceInterface)(nil).CheckHealthDB), arg0)
}
